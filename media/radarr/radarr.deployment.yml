apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: radarr
  name: radarr
  namespace: media
spec:
  replicas: 1
  strategy:
    type: Recreate
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 50
              preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      containers:
        - env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          image: linuxserver/radarr:5.8.3
          imagePullPolicy: IfNotPresent
          name: radarr
          ports:
            - containerPort: 7878
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              memory: 1Gi
          volumeMounts:
            - mountPath: /config
              name: media-config
              subPath: radarr
            - mountPath: /downloads/complete
              name: media-data
              subPath: downloads/transmission
            - mountPath: /movies
              name: media-data
              subPath: library/movies
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: media-config
          persistentVolumeClaim:
            claimName: media-config
        - name: media-data
          persistentVolumeClaim:
            claimName: media-data
      nodeSelector:
        kubernetes.io/arch: arm64