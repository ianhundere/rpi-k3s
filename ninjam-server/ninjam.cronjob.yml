apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
  labels:
    app: nfs-subdir-external-provisioner
  name: nfs-ninjam-cronjob
provisioner: cluster.local/nfs-subdir-external-provisioner-rpik3s
reclaimPolicy: Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true
mountOptions:
  - noatime
parameters:
  archiveOnDelete: "true"
  onDelete: retain
  pathPattern: filebrowser/files/jamz
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ninjam-server-cronjob
  namespace: ninjam
  labels:
    app: ninjam-server-cronjob
spec:
  storageClassName: nfs-ninjam-cronjob
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ninjam-server-cronjob
  namespace: ninjam
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: ninjam
  name: ninjam-server-cronjob
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["create"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ninjam-server-cronjob
  namespace: ninjam
subjects:
  - kind: ServiceAccount
    name: ninjam-server-cronjob
    namespace: ninjam
roleRef:
  kind: Role
  name: ninjam-server-cronjob
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: ninjam-server-cronjob
  namespace: ninjam
  labels:
    app: ninjam-server-cronjob
spec:
  schedule: "0 3 * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  suspend: false
  jobTemplate:
    spec:
      backoffLimit: 3
      template:
        spec:
          serviceAccountName: ninjam-server-cronjob
          containers:
            - name: ninjam-server-cronjob
              image: ubuntu
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: sessions-volume
                  mountPath: sessions
                - name: jamz-volume
                  mountPath: jamz
              command: ["/bin/bash", "-c"]
              args:
                [
                  "if find sessions -maxdepth 1 -name *.ninjam -type d -mmin +30 -print | grep ninjam; then echo 'moving 30min old jamz' && find sessions -maxdepth 1 -name *.ninjam -type d -mmin +30 -exec mv {} jamz \\;; fi; if find jamz -maxdepth 1 -name *.ninjam -type d -mtime +30 -print | grep ninjam; then echo 'deleting 30 day old jamz' && find jamz -maxdepth 1 -name *.ninjam -type d -mtime +30 -exec rm -r {} \\;; fi;",
                ]
              resources:
                requests:
                  cpu: 100m
                  memory: 16Mi
                limits:
                  memory: 16Mi
          restartPolicy: OnFailure
          volumes:
            - name: sessions-volume
              persistentVolumeClaim:
                claimName: ninjam-server
            - name: jamz-volume
              persistentVolumeClaim:
                claimName: ninjam-server-cronjob
