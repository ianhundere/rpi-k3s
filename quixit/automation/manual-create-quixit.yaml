apiVersion: batch/v1
kind: Job
metadata:
 name: quixit-create-challenge
 namespace: quixit
spec:
 template:
  spec:
   containers:
    - name: quixit-create-challenge
      image: filebrowser/filebrowser:v2.32.0
      command:
       - /bin/sh
       - -c
       - |
        # get the next quixit number
        if [ -f "/srv/quixit/current_quixit_number.txt" ]; then
          CURRENT_NUMBER=$(cat /srv/quixit/current_quixit_number.txt)
          NEW_NUMBER=$((CURRENT_NUMBER + 1))
        else
          NEW_NUMBER=1
        fi

        # create directory structure
        QUIXIT_DIR="/srv/quixit/quixit-$NEW_NUMBER"
        mkdir -p "$QUIXIT_DIR/samples"
        # songs directory will be created during transition to songs phase

        # set deadline (7 days)
        # Use a simpler approach that works on both BSD and GNU systems
        if date -v+7d >/dev/null 2>&1; then
          # BSD date (macOS)
          SAMPLE_DEADLINE=$(date -v+7d +%Y-%m-%d)
        elif date -d "7 days" >/dev/null 2>&1; then
          # GNU date (Linux)
          SAMPLE_DEADLINE=$(date -d "7 days" +%Y-%m-%d)
        else
          # Manual calculation as fallback
          TODAY=$(date +%Y-%m-%d)
          YEAR=$(echo $TODAY | cut -d'-' -f1)
          MONTH=$(echo $TODAY | cut -d'-' -f2)
          DAY=$(echo $TODAY | cut -d'-' -f3)
          
          # Remove leading zeros
          MONTH=$(echo $MONTH | sed 's/^0//')
          DAY=$(echo $DAY | sed 's/^0//')
          
          # Add 7 days
          DAY=$((DAY + 7))
          
          # Handle month rollover
          DAYS_IN_MONTH=31
          if [ "$MONTH" = "4" ] || [ "$MONTH" = "6" ] || [ "$MONTH" = "9" ] || [ "$MONTH" = "11" ]; then
            DAYS_IN_MONTH=30
          elif [ "$MONTH" = "2" ]; then
            # Check for leap year
            if [ $((YEAR % 4)) -eq 0 ] && [ $((YEAR % 100)) -ne 0 ] || [ $((YEAR % 400)) -eq 0 ]; then
              DAYS_IN_MONTH=29
            else
              DAYS_IN_MONTH=28
            fi
          fi
          
          # Adjust for month rollover
          if [ "$DAY" -gt "$DAYS_IN_MONTH" ]; then
            DAY=$((DAY - DAYS_IN_MONTH))
            MONTH=$((MONTH + 1))
            
            # Adjust for year rollover
            if [ "$MONTH" -gt 12 ]; then
              MONTH=1
              YEAR=$((YEAR + 1))
            fi
          fi
          
          # Format with padding
          if [ "$MONTH" -lt 10 ]; then
            MONTH="0$MONTH"
          fi
          if [ "$DAY" -lt 10 ]; then
            DAY="0$DAY"
          fi
          
          SAMPLE_DEADLINE="$YEAR-$MONTH-$DAY"
        fi

        # create phase indicator file with detailed information
        echo "QUIXIT #$NEW_NUMBER - SAMPLE SUBMISSION PHASE" > "$QUIXIT_DIR/QUIXIT_HAS_BEGUN_UPLOAD_SAMPLES_BEFORE_$SAMPLE_DEADLINE.txt"
        echo "" >> "$QUIXIT_DIR/QUIXIT_HAS_BEGUN_UPLOAD_SAMPLES_BEFORE_$SAMPLE_DEADLINE.txt"
        echo "Upload your audio samples before: $SAMPLE_DEADLINE" >> "$QUIXIT_DIR/QUIXIT_HAS_BEGUN_UPLOAD_SAMPLES_BEFORE_$SAMPLE_DEADLINE.txt"
        echo "" >> "$QUIXIT_DIR/QUIXIT_HAS_BEGUN_UPLOAD_SAMPLES_BEFORE_$SAMPLE_DEADLINE.txt"
        echo "Accepted file formats: .wav, .mp3, .ogg, .flac, .aiff" >> "$QUIXIT_DIR/QUIXIT_HAS_BEGUN_UPLOAD_SAMPLES_BEFORE_$SAMPLE_DEADLINE.txt"
        echo "" >> "$QUIXIT_DIR/QUIXIT_HAS_BEGUN_UPLOAD_SAMPLES_BEFORE_$SAMPLE_DEADLINE.txt"
        echo "Guidelines:" >> "$QUIXIT_DIR/QUIXIT_HAS_BEGUN_UPLOAD_SAMPLES_BEFORE_$SAMPLE_DEADLINE.txt"
        echo "- Upload individual sounds, not full tracks" >> "$QUIXIT_DIR/QUIXIT_HAS_BEGUN_UPLOAD_SAMPLES_BEFORE_$SAMPLE_DEADLINE.txt"
        echo "- Keep samples under 30 seconds" >> "$QUIXIT_DIR/QUIXIT_HAS_BEGUN_UPLOAD_SAMPLES_BEFORE_$SAMPLE_DEADLINE.txt"
        echo "- All samples will be available to everyone for the song phase" >> "$QUIXIT_DIR/QUIXIT_HAS_BEGUN_UPLOAD_SAMPLES_BEFORE_$SAMPLE_DEADLINE.txt"

        # update current number
        echo "$NEW_NUMBER" > "/srv/quixit/current_quixit_number.txt"
        chmod 444 "/srv/quixit/current_quixit_number.txt"

        # set directory permissions
        chmod -R 777 "$QUIXIT_DIR"
      volumeMounts:
       - name: quixit
         mountPath: /srv
         subPath: files
   volumes:
    - name: quixit
      persistentVolumeClaim:
       claimName: quixit
   restartPolicy: OnFailure
