apiVersion: batch/v1
kind: Job
metadata:
 name: quixit-finalize
 namespace: quixit
spec:
 template:
  spec:
   containers:
    - name: quixit-finalize
      image: alpine:3.21.3
      command:
       - /bin/sh
       - -c
       - |
        # get current quixit number
        if [ -f "/srv/quixit/current_quixit_number.txt" ]; then
          QUIXIT_NUMBER=$(cat /srv/quixit/current_quixit_number.txt)
          QUIXIT_DIR="/srv/quixit/quixit-$QUIXIT_NUMBER"
        else
          echo "Error: No current Quixit number found"
          exit 1
        fi

        # check if in songs phase
        if ls "$QUIXIT_DIR/SUBMIT_SONGS_BEFORE_"* 1>/dev/null 2>&1; then
          # Log the phase transition
          echo "Finalizing Quixit #$QUIXIT_NUMBER"
          
          # remove songs phase indicator files using find for robustness
          find "$QUIXIT_DIR" -name "SUBMIT_SONGS_BEFORE_*.txt" -type f -delete
          
          # Check and log songs that will be archived
          SONGS_FOLDER="$QUIXIT_DIR/songs"
          SONG_COUNT=$(find "$SONGS_FOLDER" -type f | wc -l)
          echo "Found $SONG_COUNT songs to archive:"
          find "$SONGS_FOLDER" -type f -printf "%f\n" | while read -r song; do
            echo "- $song"
          done
          
          # create songs archive with error handling
          cd "$QUIXIT_DIR"
          if ! tar -czf ALL_SONGS.tar.gz songs/; then
            echo "Error: Failed to create songs archive"
            exit 1
          fi
          
          # Verify the archive was created and contains files
          if [ ! -s "$QUIXIT_DIR/ALL_SONGS.tar.gz" ]; then
            echo "Error: Songs archive is empty or was not created"
            exit 1
          fi
          
          # List contents of the archive to verify
          echo "Verifying archive contents:"
          tar -tvf ALL_SONGS.tar.gz
          
          # remove songs directory after creating archive
          if [ -s "$QUIXIT_DIR/ALL_SONGS.tar.gz" ]; then
            echo "Songs archive created successfully, removing songs folder"
            rm -rf "$QUIXIT_DIR/songs"
          else
            echo "Warning: Songs archive creation may have failed, keeping songs folder"
            exit 1
          fi
          
          # create completion indicator with improved content
          COMPLETION_DATE=$(date +"%Y-%m-%d")
          echo "QUIXIT #$QUIXIT_NUMBER - COMPLETED" > "$QUIXIT_DIR/QUIXIT_COMPLETED.txt"
          echo "" >> "$QUIXIT_DIR/QUIXIT_COMPLETED.txt"
          echo "This quixit challenge is now complete!" >> "$QUIXIT_DIR/QUIXIT_COMPLETED.txt"
          echo "Completed on: $COMPLETION_DATE" >> "$QUIXIT_DIR/QUIXIT_COMPLETED.txt"
          echo "" >> "$QUIXIT_DIR/QUIXIT_COMPLETED.txt"
          echo "You can download:" >> "$QUIXIT_DIR/QUIXIT_COMPLETED.txt"
          echo "- SAMPLE_PACK.tar.gz - All samples used in this challenge" >> "$QUIXIT_DIR/QUIXIT_COMPLETED.txt"
          echo "- ALL_SONGS.tar.gz - All submitted tracks" >> "$QUIXIT_DIR/QUIXIT_COMPLETED.txt"
          echo "" >> "$QUIXIT_DIR/QUIXIT_COMPLETED.txt"
          echo "Thank you for participating!" >> "$QUIXIT_DIR/QUIXIT_COMPLETED.txt"
          
          # update current quixit number file
          echo "$QUIXIT_NUMBER" > "/srv/quixit/current_quixit_number.txt"
          chmod 444 "/srv/quixit/current_quixit_number.txt"
          
          echo "Successfully finalized Quixit #$QUIXIT_NUMBER"
        else
          echo "Error: Not in songs phase or no phase indicator file found"
          exit 1
        fi
      volumeMounts:
       - name: quixit
         mountPath: /srv
         subPath: files
   volumes:
    - name: quixit
      persistentVolumeClaim:
       claimName: quixit
   restartPolicy: OnFailure
